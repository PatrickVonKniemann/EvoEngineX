@inject IJSRuntime JsRuntime

<div id="editor" class="w-full border border-gray-300 mb-5" style="height: 400px" @ref="_editorElement"></div>

@code {
    [Parameter] public string InitialCode { get; set; } = string.Empty;
    [Parameter] public EventCallback<string> OnCodeChange { get; set; }

    private ElementReference _editorElement;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JsRuntime.InvokeVoidAsync("createMonacoEditor", _editorElement, new
            {
                value = InitialCode,
                language = "javascript",
                theme = "vs"
            });

            await JsRuntime.InvokeVoidAsync("monacoEditor.onDidChangeModelContent", DotNetObjectReference.Create(this));
        }
    }

    [JSInvokable]
    public async Task UpdateCode(string code)
    {
        InitialCode = code;
        await OnCodeChange.InvokeAsync(code); // Trigger the callback to update the parent
    }
}