@page "/code-bases"
@inject CodeBaseService CodeBaseService
@using ClientApp.Services
@using DomainModels
@using ExternalDomainEntities.CodeBaseDto.Query
@using ClientApp.Components

<PageTitle>CodeBases</PageTitle>

@if (_codeBases == null)
{
    <p>Loading...</p>
}
else
{
    <div class="overflow-x-auto">
        <div class="max-h-fit overflow-y-auto">
            <table class="w-full text-sm text-left rtl:text-right text-gray-500 dark:text-gray-400">
                <thead class="text-xs text-gray-700 uppercase">
                <tr>
                    <th scope="col" class="px-6 py-3"></th>
                    <th scope="col" class="px-6 py-3">Project Name</th>
                    <th scope="col" class="px-6 py-3">Platform</th>
                    <th scope="col" class="px-6 py-3">Creator</th>
                    <th scope="col" class="px-6 py-3"></th>
                </tr>
                </thead>
                <tbody>
                @foreach (var codeBase in _codeBases.Items.Values)
                {
                    <tr class="bg-white border-b text-gray-950 w-full">
                        <td class="px-6 py-3">
                            <span class="inline-block w-2 h-2 rounded-full @GetValidityClass(codeBase.Valid)"></span>
                        </td>
                        <td class="px-6 py-3 font-medium whitespace-nowrap">@codeBase.Name</td>
                        <td class="px-6 py-3 font-medium whitespace-nowrap">@codeBase.SupportedPlatform</td>
                        <td class="px-6 py-3 font-medium whitespace-nowrap">@codeBase.UserId</td>
                        <td class="px-6 py-3">
                            <BasicButton ButtonType=@ButtonType.secondary ButtonText="Detail" CustomClass="mt-2 mb-2 py-3 px-4" Link=@Links.CodeBaseDetail/>
                        </td>
                    </tr>
                }
                </tbody>
            </table>
        </div>
        <Pagination PageNumber="@_codeBases.Pagination!.PageNumber" TotalPages="@_codeBases.Pagination.TotalPages" OnPageChanged="HandlePageChanged"/>
    </div>
}

@code {
    private ReadCodeBaseListByUserIdResponse? _codeBases;
    private int _currentPage = 1;
    private const int PageSize = 10;

    protected override async Task OnInitializedAsync()
    {
        await LoadDataAsync();
    }

    private async Task LoadDataAsync()
    {
        var userId = "123e4567-e89b-12d3-a456-426614174008";
        _codeBases = await CodeBaseService.GetDataAsync($"by-user-id/{userId}", _currentPage, PageSize);
    }

    private async Task HandlePageChanged(int pageNumber)
    {
        _currentPage = pageNumber;
        await LoadDataAsync();
    }

    private string GetValidityClass(bool isValid)
    {
        return isValid ? "bg-green-500" : "bg-red-500";
    }


}